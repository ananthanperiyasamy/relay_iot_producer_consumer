version: '2'
services:
  mongodb:
    image: mongo:latest
    restart: always
    ports:
    - "27018:27017"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  iot-consumer:
    build:
      context: ./
      dockerfile: docker/consumer.Dockerfile
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      spring.data.mongodb.uri: mongodb://mongodb:27017/iot
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: kafka:9092
    depends_on:
      - mongodb
      - kafka

  iot-api:
    build:
      context: ./
      dockerfile: docker/api.Dockerfile
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      spring.data.mongodb.uri: mongodb://mongodb:27017/iot
    depends_on:
      - mongodb

  iot-model:
    build:
      context: ./
      dockerfile: docker/model.Dockerfile
    ports:
      - "8086:8086"
    environment:
      SPRING_PROFILES_ACTIVE: docker

  iot-producer:
    build:
      context: ./
      dockerfile: docker/producer.Dockerfile
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      IOT_KAFKA_TOPIC: iot-topic
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka

  iot-frontend:
    build:
      context: ./iot-vue
      dockerfile: ../docker/frontend.Dockerfile
    ports:
      - "8080:80"
    environment:
      VUE_APP_API_URL: http://iot-api:8082
    depends_on:
      - iot-api


